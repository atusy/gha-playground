# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3

  #     # Runs a single command using the runners shell
  #     - name: Run a one-line script
  #       run: echo Hello, world!

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         echo Add other actions to build,
  #         echo test, and deploy your project.
  get:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.ref.outputs.branch }}
    steps:
      - name: Get PR data
        id: ref
        run: |
          echo "::set-output name=branch::$(
            PR="$(echo $GITHUB_REF | sed -E -e 's?^refs/pull/([0-9]+)/merge$?\1?' )"
            curl \
              --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
              --header 'Accept: application/vnd.github.v3+json' \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR" \
            | jq .head.ref
          )"
        shell: bash
  echo:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.get.outputs.ref }}
  job1:
    runs-on: ubuntu-latest
    # ステップの出力をジョブの出力にマップする
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "::set-output name=test::hello"
      - id: step2
        run: echo "::set-output name=test::world"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}


